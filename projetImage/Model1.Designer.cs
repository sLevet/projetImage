//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabasePictureModel", "picture_sketch", "pictures", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(projetImage.pictures), "sketch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(projetImage.sketch), true)]

#endregion

namespace projetImage
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabasePictureEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabasePictureEntities object using the connection string found in the 'DatabasePictureEntities' section of the application configuration file.
        /// </summary>
        public DatabasePictureEntities() : base("name=DatabasePictureEntities", "DatabasePictureEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabasePictureEntities object.
        /// </summary>
        public DatabasePictureEntities(string connectionString) : base(connectionString, "DatabasePictureEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabasePictureEntities object.
        /// </summary>
        public DatabasePictureEntities(EntityConnection connection) : base(connection, "DatabasePictureEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<pictures> pictures
        {
            get
            {
                if ((_pictures == null))
                {
                    _pictures = base.CreateObjectSet<pictures>("pictures");
                }
                return _pictures;
            }
        }
        private ObjectSet<pictures> _pictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sketch> sketch
        {
            get
            {
                if ((_sketch == null))
                {
                    _sketch = base.CreateObjectSet<sketch>("sketch");
                }
                return _sketch;
            }
        }
        private ObjectSet<sketch> _sketch;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the pictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopictures(pictures pictures)
        {
            base.AddObject("pictures", pictures);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sketch EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosketch(sketch sketch)
        {
            base.AddObject("sketch", sketch);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabasePictureModel", Name="pictures")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pictures : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new pictures object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static pictures Createpictures(global::System.Int32 id)
        {
            pictures pictures = new pictures();
            pictures.id = id;
            return pictures;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] pict_field
        {
            get
            {
                return StructuralObject.GetValidValue(_pict_field);
            }
            set
            {
                Onpict_fieldChanging(value);
                ReportPropertyChanging("pict_field");
                _pict_field = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("pict_field");
                Onpict_fieldChanged();
            }
        }
        private global::System.Byte[] _pict_field;
        partial void Onpict_fieldChanging(global::System.Byte[] value);
        partial void Onpict_fieldChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabasePictureModel", "picture_sketch", "sketch")]
        public EntityCollection<sketch> sketch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sketch>("DatabasePictureModel.picture_sketch", "sketch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sketch>("DatabasePictureModel.picture_sketch", "sketch", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabasePictureModel", Name="sketch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sketch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sketch object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="fk_picture">Initial value of the fk_picture property.</param>
        public static sketch Createsketch(global::System.Int32 id, global::System.Int32 fk_picture)
        {
            sketch sketch = new sketch();
            sketch.id = id;
            sketch.fk_picture = fk_picture;
            return sketch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_picture
        {
            get
            {
                return _fk_picture;
            }
            set
            {
                Onfk_pictureChanging(value);
                ReportPropertyChanging("fk_picture");
                _fk_picture = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fk_picture");
                Onfk_pictureChanged();
            }
        }
        private global::System.Int32 _fk_picture;
        partial void Onfk_pictureChanging(global::System.Int32 value);
        partial void Onfk_pictureChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabasePictureModel", "picture_sketch", "pictures")]
        public pictures pictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<pictures>("DatabasePictureModel.picture_sketch", "pictures").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<pictures>("DatabasePictureModel.picture_sketch", "pictures").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<pictures> picturesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<pictures>("DatabasePictureModel.picture_sketch", "pictures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<pictures>("DatabasePictureModel.picture_sketch", "pictures", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
